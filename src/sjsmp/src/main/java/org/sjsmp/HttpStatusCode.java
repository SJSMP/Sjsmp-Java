package org.sjsmp;

public enum HttpStatusCode 
{
	Continue(100, "Continue"),
	SwitchingProtocols(101, "Switching Protocols"),
	Processing(102, "Processing"),
	OK(200, "OK"),
	Created(201, "Created"),
	Accepted(202, "Accepted"),
	NonAuthoritativeInformation(203, "Non-Authoritative Information"),
	NoContent(204, "No Content"),
	ResetContent(205, "Reset Content"),
	PartialContent(206, "Partial Content"),
	MultiStatus(207, "Multi-Status"),
	AlreadyReported(208, "Already Reported"),
	IMUsed(226, "IM Used"),
	MultipleChoices(300, "Multiple Choices"),
	MovedPermanently(301, "Moved Permanently"),
	Found(302, "Found"),
	SeeOther(303, "See Other"),
	NotModified(304, "Not Modified"),
	UseProxy(305, "Use Proxy"),
	SwitchProxy(306, "Switch Proxy"),
	TemporaryRedirect(307, "Temporary Redirect"),
	PermanentRedirect(308, "Permanent Redirect"),
	BadRequest(400, "Bad Request"),
	Unauthorized(401, "Unauthorized"),
	PaymentRequired(402, "Payment Required"),
	Forbidden(403, "Forbidden"),
	NotFound(404, "Not Found"),
	MethodNotAllowed(405, "Method Not Allowed"),
	NotAcceptable(406, "Not Acceptable"),
	ProxyAuthenticationRequired(407, "Proxy Authentication Required"),
	RequestTimeout(408, "Request Timeout"),
	Conflict(409, "Conflict"),
	Gone(410, "Gone"),
	LengthRequired(411, "Length Required"),
	PreconditionFailed(412, "Precondition Failed"),
	RequestEntityTooLarge(413, "Request Entity Too Large"),
	RequestURITooLong(414, "Request-URI Too Long"),
	UnsupportedMediaType(415, "Unsupported Media Type"),
	RequestedRangeNotSatisfiable(416, "Requested Range Not Satisfiable"),
	ExpectationFailed(417, "Expectation Failed"),
	ImATeapot(418, "I'm a teapot"),
	AuthenticationTimeout(419, "Authentication Timeout"),
	MethodFailure(420, "Method Failure"),
	UnprocessableEntity(422, "Unprocessable Entity"),
	Locked(423, "Locked"),
	FailedDependency(424, "Failed Dependency"),
	UpgradeRequired(426, "Upgrade Required"),
	PreconditionRequired(428, "Precondition Required"),
	TooManyRequests(429, "Too Many Requests"),
	RequestHeaderFieldsTooLarge(431, "Request Header Fields Too Large"),
	LoginTimeout(440, "Login Timeout"),
	NoResponse(444, "No Response"),
	RetryWith(449, "Retry With"),
	BlockedByWindowsParentalControls(450, "Blocked by Windows Parental Controls"),
	Redirect(451, "Redirect"),
	RequestHeaderToosLarge(494, "Request Header Too Large"),
	CertError(495, "Cert Error"),
	NoCert(496, "No Cert"),
	HTTPtoHTTPS(497, "HTTP to HTTPS"),
	TokenExpiredInvalid(498, "Token expired/invalid"),
	TokenRequired(499, "Token required"),
	InternalServerError(500, "Internal Server Error"),
	NotImplemented(501, "Not Implemented"),
	BadGateway(502, "Bad Gateway"),
	ServiceUnavailable(503, "Service Unavailable"),
	GatewayTimeout(504, "Gateway Timeout"),
	HTTPVersionNotSupported(505, "HTTP Version Not Supported"),
	VariantAlsoNegotiates(506, "Variant Also Negotiates"),
	InsufficientStorage(507, "Insufficient Storage"),
	LoopDetected(508, "Loop Detected"),
	BandwidthLimitExceeded(509, "Bandwidth Limit Exceeded"),
	NotExtended(510, "Not Extended"),
	NetworkAuthenticationRequired(511, "Network Authentication Required"),
	NetworkReadTimeoutError(598, "Network read timeout error"),
	NetworkConnectTimeoutError(599, "Network connect timeout error");	
	
	public final int code;
	public final String name;
	
	private HttpStatusCode(int code, String name) 
	{
		this.code = code;
		this.name = name;
	}
}
